// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var PixiJs = require("pixi.js");

function create() {
  return new PixiJs.Application();
}

function load_textures(paths, callback) {
  PixiJs.loader.add(paths).load(callback);
  return /* () */0;
}

function texture(name) {
  return PixiJs.loader.resources[name].texture;
}

function local_position($$event, container) {
  var pos = $$event.data.getLocalPosition(container);
  return /* float array */[
          pos.x,
          pos.y
        ];
}

function add_ticker(pixi_app, callback) {
  pixi_app.ticker.add(callback);
  return /* () */0;
}

function remove_ticker(pixi_app, callback) {
  pixi_app.ticker.add(callback);
  return /* () */0;
}

function on(prim, prim$1, prim$2) {
  prim.on(prim$1, prim$2);
  return /* () */0;
}

var App = /* module */[
  /* create */create,
  /* load_textures */load_textures,
  /* texture */texture,
  /* local_position */local_position,
  /* add_ticker */add_ticker,
  /* remove_ticker */remove_ticker,
  /* on */on
];

function sprite(prim) {
  return new PixiJs.Sprite(prim);
}

function tiling_sprite(prim, prim$1, prim$2) {
  return new (PixiJs.extras.TilingSprite)(prim, prim$1, prim$2);
}

function add_sprite(app, sprite) {
  app.stage.addChild(sprite);
  return /* () */0;
}

function append_child_sprite(prim, prim$1) {
  prim.addChild(prim$1);
  return /* () */0;
}

function set_size(sprite, width, height) {
  sprite.width = width;
  sprite.height = height;
  return /* () */0;
}

function global_position(sprite) {
  var pos = sprite.getGlobalPosition();
  return /* float array */[
          pos.x,
          pos.y
        ];
}

function get_size(sprite) {
  return /* float array */[
          sprite.height,
          sprite.width
        ];
}

function interact(sprite) {
  sprite.interactive = true;
  return /* () */0;
}

function listen(prim, prim$1, prim$2) {
  prim.on(prim$1, prim$2);
  return /* () */0;
}

function sprite_texture(prim) {
  return prim.texture;
}

function place(sprite, x, y) {
  sprite.x = x;
  sprite.y = y;
  return /* () */0;
}

function parent_container(prim) {
  return prim.parent;
}

var Sprite = /* module */[
  /* sprite */sprite,
  /* tiling_sprite */tiling_sprite,
  /* add_sprite */add_sprite,
  /* append_child_sprite */append_child_sprite,
  /* set_size */set_size,
  /* global_position */global_position,
  /* get_size */get_size,
  /* interact */interact,
  /* listen */listen,
  /* sprite_texture */sprite_texture,
  /* place */place,
  /* parent_container */parent_container
];

exports.App    = App;
exports.Sprite = Sprite;
/* pixi.js Not a pure module */
